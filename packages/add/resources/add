#!/usr/bin/env sh

# ==============================================================================
#
# Script name: add
# Description: File and directory creation
# Dependencies: easier_fs.sh, easier_string.sh, easier_logging.sh
# GitHub: https://www.github.com/mathieuhardy/nixos
# License: https://www.github.com/mathieuhardy/nixos/LICENSE
# Contributors: Mathieu Hardy
#
# This script allows the creation of files, directories or symbolic links.
#
# Here's a usage example:
#   $ add dir1 dir2 file1.txt file2.log "src -> file2.log"
#
# Force types:
#   $ add d:dir-with.ext f:file-without-ext
#
# ==============================================================================

# ------------------------------------------------------------------------------
# Dependencies
# ------------------------------------------------------------------------------

# shellcheck source=/dev/null
. easier_fs.sh
. easier_logging.sh
. easier_string.sh

# ------------------------------------------------------------------------------
# Private functions
# ------------------------------------------------------------------------------

__add_process_entry()
{
    if exists "${1}"
    then
        return
    fi

    is_file=0

    if [ "${#}" -eq 2 ]
    then
        if [ "${2}" = "f" ]
        then
            is_file=1
        elif [ "${2}" = "d" ]
        then
            is_file=0
        else
            return
        fi
    else
        filename=$(basename "${1}")

        if contains "${filename}" '.'
        then
            is_file=1
        fi
    fi

    if [ "${is_file}" -eq "1" ]
    then
        directory=$(dirname "${1}")

        if ! exists "${directory}"
        then
            mkdir -p "${directory}"
            success "D ${directory}"
        fi

        :>"${1}"
        success "F ${1}"
    else
        mkdir -p "${1}"
        success "D ${1}"
    fi
}

# ------------------------------------------------------------------------------
# Entry point
# ------------------------------------------------------------------------------

for entry in "${@}"
do
    if contains "${entry}" '->'
    then
        has_more_than_one=$(echo "${entry}" | grep "\->.*\->")

        if is_not_empty "${has_more_than_one}"
        then
            error "Invalid argument: \"${entry}\""
            continue
        fi

        idx=0

        for token in $(split "${entry}" '->')
        do
            case ${idx} in
                0)
                    src="${token}"
                    idx=$(( ++idx ))
                    ;;

                1)
                    dest="${token}"
                    ;;
            esac
        done

        if is_empty "${src}"
        then
            error "No source for link"
            continue
        fi

        if is_empty "${dest}"
        then
            error "No destination for link"
            continue
        fi

        ln -sf "${dest}" "${src}"
        success "L ${src} -> ${dest}"

        entry="${dest}"
    elif starts_with "${entry}" 'f:'
        entry=$(lstrip "${entry}")
        __add_process_entry "${entry}" "f"
    elif starts_with "${entry}" 'd:'
        entry=$(lstrip "${entry}")
        __add_process_entry "${entry}" "d"
    then

    fi

    __add_process_entry "${entry}"
done
