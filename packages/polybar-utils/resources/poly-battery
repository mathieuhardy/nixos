#!/usr/bin/env sh

# ==============================================================================
#
# Script name: poly-battery
# Description: Display battery information in polybar format.
# Dependencies: easier_cli.sh, rice
# GitHub: https://www.github.com/mathieuhardy/nixos
# License: https://www.github.com/mathieuhardy/nixos/LICENSE
# Contributors: Mathieu Hardy
#
# ==============================================================================

# ------------------------------------------------------------------------------
# Dependencies
# ------------------------------------------------------------------------------

. easier_cli.sh

requires rice

# ------------------------------------------------------------------------------
# Variables
# ------------------------------------------------------------------------------

fg_normal=$(rice -m polybar "colors.battery.fg.high")
bg_normal=$(rice -m polybar "colors.battery.bg.high")

mode_eco=0
mode_full=1
mode=${mode_eco}
mode_file=${HOME}/.config/battery-mode

if [ -f "${mode_file}" ]
then
    mode=$(cat ${mode_file})
fi

easier_cli_program='poly-battery'
easier_cli_version='1.0.0'

easer_cli_describe=( \
    'o | 1 | - | h | help  | Show this help and exit' \
    'o | 1 | - | d | debug | Debug mode' \
    'o | 1 | - | m | mode  | Toggle display mode')

# ------------------------------------------------------------------------------
# Functions
# ------------------------------------------------------------------------------

toggle_mode()
{
    mode=$(( (mode + 1) % 2 ))

    echo "${mode}" > ${mode_file}

    if [ "${mode}" = "${mode_eco}" ]
    then
        battery-mode 40 80
    else
        battery-mode 1 100
    fi

    polybar-msg hook battery 1
}

dump()
{
    # Get values from cerebro
    path=/tmp/cerebro/battery/shell
    [ -f "${path}" ] || error "No battery information provided by cerebro"

    values=$(cat "${path}")
    eval "${values}"

    # Get icon to display
    if [ ${plugged} = "true" ]
    then
        suffix=".ac"
    fi

    if [ ${percent} -eq 100 ]
    then
        icon=$(rice -u -m polybar "icons.battery${suffix}.\"100\"")
    elif [ ${percent} -ge 90 ]
    then
        icon=$(rice -u -m polybar "icons.battery${suffix}.\"90\"")
    elif [ ${percent} -ge 80 ]
    then
        icon=$(rice -u -m polybar "icons.battery${suffix}.\"80\"")
    elif [ ${percent} -ge 70 ]
    then
        icon=$(rice -u -m polybar "icons.battery${suffix}.\"70\"")
    elif [ ${percent} -ge 60 ]
    then
        icon=$(rice -u -m polybar "icons.battery${suffix}.\"60\"")
    elif [ ${percent} -ge 50 ]
    then
        icon=$(rice -u -m polybar "icons.battery${suffix}.\"50\"")
    elif [ ${percent} -ge 40 ]
    then
        icon=$(rice -u -m polybar "icons.battery${suffix}.\"40\"")
    elif [ ${percent} -ge 30 ]
    then
        icon=$(rice -u -m polybar "icons.battery${suffix}.\"30\"")
    elif [ ${percent} -ge 20 ]
    then
        icon=$(rice -u -m polybar "icons.battery${suffix}.\"20\"")
    elif [ ${percent} -ge 10 ]
    then
        icon=$(rice -u -m polybar "icons.battery${suffix}.\"10\"")
    else
        icon=$(rice -u -m polybar "icons.battery${suffix}.\"0\"")
    fi

    # Get color accroding to threshold
    threshold=$(rice -m polybar "config.battery.threshold")

    if [ ${percent} -lt ${threshold} ]
    then
        fg=$(rice -m polybar "colors.battery.fg.low")
        bg=$(rice -m polybar "colors.battery.bg.low")
    else
        fg=${fg_normal}
        bg=${bg_normal}
    fi

    # Get battery mode
    if [ "${mode}" = "${mode_eco}" ]
    then
        battery_mode_icon=$(rice -u -m polybar "icons.battery.eco")
        battery_mode=" ${battery_mode_icon}"
    else
        battery_mode=''
    fi

    # Display
    printf \
        "%%{F%s}%%{B%s} %%{T2}%s%%{T-}%%{B- F-}" \
        "${fg_normal}" \
        "${bg_normal}" \
        "${icon}"

    printf \
        "%%{F%s}%%{B%s} %%{T1}%02d%%%%{T-}%%{B- F-}" \
        "${fg}" \
        "${bg}" \
        "${percent}"

    printf \
        "%%{F%s}%%{B%s}%%{T1}%s%%{T-} %%{B- F-}\n" \
        "${fg_normal}" \
        "${bg_normal}" \
        "${battery_mode}"
}

dump_default()
{
    icon_unknown=$(rice -u -m polybar "icons.battery.unknown")

    # Get battery mode
    if [ "${mode}" = "${mode_eco}" ]
    then
        battery_mode=" ECO"
    else
        battery_mode=''
    fi

    printf \
        "%%{F%s}%%{B%s} %%{T2}%s%%{T-} %%{T1}--%%%s%%{T-}%%{B- F-}\n" \
        "${fg_normal}" \
        "${bg_normal}" \
        "${icon_unknown}" \
        "${battery_mode}"
}

error()
{
    [ "${opt_d}" -eq "1" ] && echo "${1}" 1>&2
    dump_default
    exit 1
}

# ------------------------------------------------------------------------------
# Command line arguments
# ------------------------------------------------------------------------------

cli_parse "${cli_desc[@]}" "${@}"

if [ "${opt_h}" = "1" ]
then
    cli_usage
fi

# ------------------------------------------------------------------------------
# Entry point
# ------------------------------------------------------------------------------

if [ "${opt_m}" = "1" ]
then
    toggle_mode
else
    dump
fi
