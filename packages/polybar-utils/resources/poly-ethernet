#!/usr/bin/env sh

# ==============================================================================
#
# Script name: poly-ethernet
# Description: Display ethernet information in polybar format.
# Dependencies: easier_cli.sh, ip, nmcli, rice
# GitHub: https://www.github.com/mathieuhardy/nixos
# License: https://www.github.com/mathieuhardy/nixos/LICENSE
# Contributors: Mathieu Hardy
#
# TODO: notify-send changes
#
# ==============================================================================

# ------------------------------------------------------------------------------
# Dependencies
# ------------------------------------------------------------------------------

. easier_cli.sh

requires ip
requires nmcli
requires rice

# ------------------------------------------------------------------------------
# Variables
# ------------------------------------------------------------------------------

icon_disabled=$(rice -u -m polybar "icons.ethernet.disabled")
icon_enabled=$(rice -u -m polybar "icons.ethernet.enabled")

fg=$(rice -m polybar "colors.ethernet.enabled.fg")
bg=$(rice -m polybar "colors.ethernet.enabled.bg")

fg_disabled=$(rice -m polybar "colors.ethernet.disabled.fg")
bg_disabled=$(rice -m polybar "colors.ethernet.disabled.bg")

mode_name=0
mode_ip=1
mode=${mode_name}
mode_file=/tmp/poly-wifi-mode

if [ -f "${mode_file}" ]
then
    mode=$(cat ${mode_file})
fi

easier_cli_program='poly-ethernet'
easier_cli_version='1.0.0'

easer_cli_describe=( \
    'o | 1 | - | h | help   | Show this help and exit' \
    'o | 1 | - | m | mode   | Toggle display mode')

# ------------------------------------------------------------------------------
# Functions
# ------------------------------------------------------------------------------

toggle_mode()
{
    mode=$(( (mode + 1) % 2 ))

    echo "${mode}" > ${mode_file}

    polybar-msg hook ethernet 1
}

dump()
{
    text=

    if [ ${mode} -eq ${mode_name} ]
    then
        connection=$(nmcli -f type,name connection show --active \
            2>/dev/null \
            | grep "ethernet" \
            | head -1 \
            | sed 's/^[^ ]* *//g' \
            | sed 's/ *$//g')

        if [ -n "${connection}" ]
        then
            text=${connection}
        fi
    else
        interface=$(nmcli -f type,device connection show --active \
            2>/dev/null \
            | grep "ethernet" \
            | head -1 \
            | awk '{ print $NF }')

        if [ -z "${interface}" ]
        then
            dump_default
            return
        fi

        ip=$(ip -4 addr \
            | egrep ${interface} \
            | egrep "inet" \
            | sed 's/^ *//g' \
            | cut -d ' ' -f 2 \
            | sed 's/\/.*//g')

        if [ -n "${ip}" ]
        then
            text=${ip}
        fi
    fi

    if [ -z "${text}" ]
    then
        dump_default
        return
    fi

    printf \
        "%%{F%s}%%{B%s} %%{T2}%s%%{T-} %%{T1}%s%%{T-} %%{B- F-}\n" \
        "${fg}" \
        "${bg}" \
        "${icon_enabled}" \
        "${text}"
}

dump_default()
{
    printf \
        "%%{F%s}%%{B%s} %%{T2}%s%%{T-} %%{B- F-}\n" \
        "${fg_disabled}" \
        "${bg_disabled}" \
        "${icon_disabled}"
}

error()
{
    [ ${debug} -eq 1 ] && echo "${1}" 1>&2
    dump_default
    exit 1
}

# ------------------------------------------------------------------------------
# Command line arguments
# ------------------------------------------------------------------------------

cli_parse "${cli_desc[@]}" "${@}"

if [ "${opt_h}" = "1" ]
then
    cli_usage
fi

# ------------------------------------------------------------------------------
# Entry point
# ------------------------------------------------------------------------------

if [ "${opt_m}" = "1" ]
then
    toggle_mode
else
    dump
fi
