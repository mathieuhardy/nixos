#!/usr/bin/env sh

# ==============================================================================
#
# Script name: poly-wifi
# Description: Display WiFi information in polybar format.
# Dependencies: easier_cli.sh, nmcli, rice
# GitHub: https://www.github.com/mathieuhardy/nixos
# License: https://www.github.com/mathieuhardy/nixos/LICENSE
# Contributors: Mathieu Hardy
#
# TODO: notify-send changes
#
# ==============================================================================

# ------------------------------------------------------------------------------
# Dependencies
# ------------------------------------------------------------------------------

. easier_cli.sh

requires nmcli
requires rice

# ------------------------------------------------------------------------------
# Variables
# ------------------------------------------------------------------------------

icon_disabled=$(rice -u -m polybar "icons.wifi.disabled")
icon_enabled=$(rice -u -m polybar "icons.wifi.enabled")

fg=$(rice -m polybar "colors.wifi.enabled.fg")
bg=$(rice -m polybar "colors.wifi.enabled.bg")

fg_disabled=$(rice -m polybar "colors.wifi.disabled.fg")
bg_disabled=$(rice -m polybar "colors.wifi.disabled.bg")

mode_name=0
mode_ip=1
mode=${mode_name}
mode_file=/tmp/poly-wifi-mode

if [ -f "${mode_file}" ]
then
    mode=$(cat ${mode_file})
fi

easier_cli_program='poly-wifi'
easier_cli_version='1.0.0'

easer_cli_describe=( \
    'o | 1 | - | h | help   | Show this help and exit' \
    'o | 1 | - | m | mode   | Toggle display mode' \
    'o | 1 | - | t | toggle | Toggle WiFi')

# ------------------------------------------------------------------------------
# Functions
# ------------------------------------------------------------------------------

toggle_mode()
{
    mode=$(( (mode + 1) % 2 ))

    echo "${mode}" > ${mode_file}

    polybar-msg hook wifi 1
}

toggle_wifi()
{
    status=$(nmcli radio wifi)

    if [ "${status}" = "enabled" ]
    then
        nmcli radio wifi off 1>/dev/null 2>&1
    else
        nmcli radio wifi on 1>/dev/null 2>&1
    fi
}

dump()
{
    text=
    sep=
    status=$(nmcli radio wifi)

    if [ "${status}" = "disabled" ]
    then
        dump_default
        return
    fi

    if [ ${mode} -eq ${mode_name} ]
    then
        connection=$(nmcli -f type,name connection show --active \
            2>/dev/null \
            | grep "wifi" \
            | head -1 \
            | sed 's/^[^ ]*  */ /g' \
            | sed 's/ *$//g')

        text=${connection}
    else
        echo "get interface" >>/tmp/wifi.log
        interface=$(nmcli -f type,device connection show --active \
            2>/dev/null \
            | egrep "wifi" \
            | head -1 \
            | awk '{ print $NF }')

        if [ -z "${interface}" ]
        then
            dump_default
            return
        fi

        ip=$(ip -4 addr \
            | egrep ${interface} \
            | egrep "inet" \
            | sed 's/^ *//g' \
            | cut -d ' ' -f 2 \
            | sed 's/\/.*//g')

        if [ -z "${ip}" ]
        then
            dump_default
            return
        fi

        text=${ip}
    fi

    if [ -n "${text}" ]
    then
        sep=" "
    fi

    printf \
        "%%{F%s}%%{B%s} %%{T2}%s%%{T-}%s%%{T1}%s%%{T-} %%{B- F-}\n" \
        "${fg}" \
        "${bg}" \
        "${icon_enabled}" \
        "${sep}" \
        "${text}"
}

dump_default()
{
    printf \
        "%%{F%s}%%{B%s} %%{T2}%s%%{T-} %%{B- F-}\n" \
        "${fg_disabled}" \
        "${bg_disabled}" \
        "${icon_disabled}"
}

# ------------------------------------------------------------------------------
# Command line arguments
# ------------------------------------------------------------------------------

cli_parse "${cli_desc[@]}" "${@}"

if [ "${opt_h}" = "1" ]
then
    cli_usage
fi

# ------------------------------------------------------------------------------
# Entry point
# ------------------------------------------------------------------------------

if [ "${opt_m}" = "1" ]
then
    toggle_mode
elif [ "${opt_t}" = "1" ]
then
    toggle_wifi
else
    dump
fi
