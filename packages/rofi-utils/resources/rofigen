#!/usr/bin/env bash

# ==============================================================================
#
# Script name: rofigen
# Description: Display a rofi menu given a list of entries provided in
#              shell variables.
# Dependencies: rofi
# GitHub: https://www.github.com/mathieuhardy/nixos
# License: https://www.github.com/mathieuhardy/nixos/LICENSE
# Contributors: Mathieu Hardy
#
# ==============================================================================

if ! command -v rofi >/dev/null
then
    echo "Missing 'rofi'" 1>&2
    exit 1
fi

# ------------------------------------------------------------------------------
# Functions
# ------------------------------------------------------------------------------

run_rofi()
{
    pid_dir=/tmp/pid
    pid_file=${pid_dir}/rofi

    mkdir -p ${pid_dir}

    # Kill previous instance if exist
    pid=$(cat ${pid_file} 2>/dev/null)

    if [ -n "${pid}" ]
    then
        kill ${pid} 1>/dev/null 2>&1
    fi

    # Run Rofi
    echo -e "${3}" | exec rofi \
        -pid ${pid_file} \
        -dmenu \
        -i \
        -font "Material Design Icons 12" \
        -lines "${2}" \
        -p "${1}" \
        -width -${4}
}

run_rofigen()
{
    cancel_message="✖　Cancel"

    # Print base menus if needed
    message=""
    count="${#orders[@]}"
    max_width=0

    for entry in "${orders[@]}"
    do
        if [ -n "${message}" ]
        then
            message="${message}\n"
        fi

        row="${icons[${entry}]}  ${menus[${entry}]}"

        message="${message}${row}"

        # Compute maximum row width
        width=$(echo "${row}" | awk '{print length($0); }')

        if [ ${width} -gt ${max_width} ]
        then
            max_width=${width}
        fi
    done

    [ -z "${message}" ] && exit 0

    # Add icon and space to the maximum width computed.
    # Add also 8 for the scrollbar of rofi and give more spaces.
    max_width=$(( max_width + 10 ))

    selection=$(run_rofi "${title}" "${count}" "${message}" "${max_width}")

    # Check selection
    [ -z "${selection}" ] && exit 0

    for entry in "${orders[@]}"
    do
        full_entry="${icons[${entry}]}  ${menus[${entry}]}"

        [ "${full_entry}" != "${selection}" ] && continue

        # Check if it needs a confirmation
        if [ "${confirmations[${entry}]}" = "false" ]
        then
            exec ${actions[${entry}]}
            exit 0
        fi

        # Compute max width
        width=$(echo "${cancel_message}" | awk '{print length($0); }')

        if [ ${width} -gt ${max_width} ]
        then
            max_width=${width}
        fi

        # Display prompt
        message="${full_entry}\n${cancel_message}"

        selection=$(run_rofi "Confirm" 2 "${message}" "${max_width}")
    done

    # Check if it's a cancel
    [ -z "${selection}" ] && exit 0

    [ "${selection}" = "${cancel_message}" ] && exit 0

    # Search for confirmation
    for entry in "${orders[@]}"
    do
        full_entry="${icons[${entry}]}  ${menus[${entry}]}"

        [ "${full_entry}" != "${selection}" ] && continue

        # Call action and quit
        exec ${actions[${entry}]}
    done
}
